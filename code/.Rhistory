summary_bygroup <- essdata_sub %>% group_by(cntry,gndr_string) %>%
summarise(mean_educ = mean(eisced, na.rm=TRUE), mean_inc = mean(hinctnta, na.rm=TRUE)) %>%
arrange(cntry)
# reshape, from wide to long
summary_bygroup
summary_bygroup_long <- summary_bygroup %>% gather(key = var, value=mean, c(mean_educ,mean_inc))
#################### GGplots  ####################
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc)) +
geom_point(colour="red", alpha=0.5)
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ gndr)
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc)) +
geom_point(colour="red", alpha=0.5)
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ factor(gndr))
summary_bygroup
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ gndr_string)
#################### Manipulates data ####################
# pipes
essdata %>% head()
# tibble
essdata <- essdata %>% as_tibble(); essdata
# select columns
essdata %>% select(cntry,gndr,yrbrn,eisced)
# filter rows that meet logic condition
essdata %>% filter(cntry!="AT" & yrbrn>1990)
# assign a new variable into the data frame
essdata %>% mutate(age = 2019 - yrbrn)
# encatenate this functions at will. Remember that the instruction a the right side
# of a pipe operates on the results of the chain of instructions on the left side.
essdata_sub <- essdata %>% select(cntry,gndr,yrbrn,eisced,hinctnta) %>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn) %>%
mutate(gndr_string = case_when(gndr == 1 ~ "Male", gndr == 2 ~ "Female"))
#################### Basic data analysis  ####################
# descriptives
essdata_sub %>% summarise(mean = mean(yrbrn), sd = sd(yrbrn))
essdata_sub %>% count(gndr_string)
# by group
summary_bygroup <- essdata_sub %>% group_by(cntry,gndr_string) %>%
summarise(mean_educ = mean(eisced, na.rm=TRUE), mean_inc = mean(hinctnta, na.rm=TRUE)) %>%
arrange(cntry)
# reshape, from wide to long
summary_bygroup
summary_bygroup_long <- summary_bygroup %>% gather(key = var, value=mean, c(mean_educ,mean_inc))
#################### GGplots  ####################
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc)) +
geom_point(colour="red", alpha=0.5)
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ gndr_string)
################################################## Preamble #################################################
# Clear Screen
cat("\014")
rm(list = ls())
# Load Packages
library("tidyverse")
library("readstata13")
############################################# Setting directories ############################################
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/EUI/Introduction to Quantitative Methods/IntroR/"
dircode     <- paste0(folder,"code/")
dirdata       <- paste0(folder,"data/")
dirresults  <- paste0(folder,"results/");  dirresults
############################################### Input data ###################################################
# Set working directory
setwd(dirdata)
getwd()
essdata <- read.dta13("ESS8_subset.dta", convert.factors=FALSE); essdata
############################################ Data exploration ################################################
# Call another R script containg some analyses.
#Organizing the work in this ways allows for more readable and tractable code.
# Set working directory
setwd(dircode)
source("2_exploration.R")
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ gndr_string)
summary_bygroup %>% filter(gndr_string!=NA) %>%
ggplot(aes(x=mean_educ, y=mean_inc)) +
geom_point(colour="red", alpha=0.5)
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ gndr_string)
View(essdata)
View(essdata)
summary_bygroup %>% count(mean_educ)
summary_bygroup %>% count(gnrd_sring)
summary_bygroup %>% count(gnrd_string)
summary_bygroup %>% count(gndr_string)
summary_bygroup %>% count(gndr_string)
summary_bygroup %>% with(tab(gndr_string))
summary_bygroup %>% with(table(gndr_string))
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc)) +
geom_point(colour="red", alpha=0.5)
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_inc, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ gndr_string)
summary_bygroup %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=mean_educ, y=mean_inc, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ gndr_string)
essdata_sub %>% summarise(mean = mean(age), sd = sd(age))
essdata_sub %>% count(gndr_string)
# by group
summary_bygroup <- essdata_sub %>% group_by(cntry,gndr_string) %>%
summarise(mean_educ = mean(eisced, na.rm=TRUE), mean_age = mean(age, na.rm=TRUE)) %>%
arrange(cntry)
# reshape, from wide to long
summary_bygroup
summary_bygroup_long <- summary_bygroup %>% gather(key = var, value=mean, c(mean_educ,mean_age))
#################### ggplots  ####################
summary_bygroup %>%
ggplot(aes(x=mean_educ, y=mean_age)) +
geom_point(colour="red", alpha=0.5)
summary_bygroup %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=mean_educ, y=mean_age, colour=cntry)) +
geom_point(alpha=0.5) +
facet_grid(. ~ gndr_string)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age)) +
geom_point(colour="red") +
facet_grid(. ~ gndr_string)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age)) +
geom_point(colour="red", alpha=0.1) +
facet_grid(. ~ gndr_string)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age)) +
geom_point(colour="red", alpha=0.05) +
facet_grid(. ~ gndr_string)
myplot <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age)) +
geom_point(colour="red"); myplot
myplot + geom_point(colour="red", alpha=0.1)
myplot + geom_point(colour="red", alpha=0.1)
myplot + geom_point()
myplot + geom_point(colour="blue", alpha = 0.5)
myplot + geom_point(colour="blue", alpha = 0.2)
myplot <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age))
myplot + geom_point()
myplot + geom_point(colour="blue", alpha = 0.2)
myplot <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age))
myplot + geom_point()
myplot + geom_point(colour="blue", alpha = 0.1)
jitter <- position_jitter(width = 0.1, height = 0.1)
myplot + geom_point(colour="blue", alpha = 0.1, position = jitter)
# Create a jitter object for reproducible jitter:
jitter <- position_jitter(width = 0.4, height = 0.4)
myplot + geom_point(colour="blue", alpha = 0.1, position = jitter)
jitter <- position_jitter(width = 1, height = 1)
myplot + geom_point(colour="blue", alpha = 0.1, position = jitter)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, colour=cntry)) +
geom_point(colour="blue", alpha = 0.1, position = jitter) +
facet_grid( . ~ gndr_string)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(colour="blue", alpha = 0.1, position = jitter) +
facet_grid( . ~ gndr_string)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
facet_grid( . ~ gndr_string)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) # Extend regression lines
library("wesanderson")
install.packages("wesanderson", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("ggsci")
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) + # Extend regression lines
scale_color_aaas() +
fill_color_aaas()
library("ggsci")
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) + # Extend regression lines
scale_color_aaas() +
fill_color_aaas()
# more options
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) + # Extend regression lines
scale_color_aaas() +
scale_fill_aaas()
myplot <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) + # Extend regression lines
scale_color_aaas() +
scale_fill_aaas()
filename <- paste0(dirresults,"myfirstrplot.png")
save_plot(filename, myplot, ncol = 2, nrow = 1, base_width=15, base_height=13, units="cm")
ggsave(filename, myplot, ncol = 2, nrow = 1, base_width=15, base_height=13, units="cm")
library("cowplot")
save_plot(filename, myplot, ncol = 2, nrow = 1, base_width=15, base_height=13, units="cm")
filename <- paste0(dirresults,"myfirstrplot.png")
save_plot(filename, myplot, base_width=10, base_height=10, units="cm")
save_plot(filename, myplot, base_width=15, base_height=14, units="cm")
essdata_sub
lm(eisced ~ age + I(age^2) + factor(gndr_string) + factor(gndr_string)*age + factor(gndr_string)*I(age^2), data=essdata_sub)
mymodel <- lm(eisced ~ age + I(age^2) + factor(gndr_string) + factor(gndr_string)*age + factor(gndr_string)*I(age^2), data=essdata_sub); mymodel
names(mymodel)
mymodel$coefficients
mymodel$coefficients %>% as_tibble()
mymodel$residuals
summary(mymodel)
names(summary(mymodel))
sum_mymodel <- summary(mymodel); sum_mymodel
names(sum_mymodel)
sum_mymodel <- summary(mymodel); sum_mymodel
names(sum_mymodel)
sum_mymodel$r.squared
sum_mymodel$sigma
model1 <- lm(eisced ~ age + I(age^2) + factor(gndr_string), data=essdata_sub); model1
model2 <- update(eisced ~ factor(gndr_string)*age + factor(gndr_string)*I(age^2), data=essdata_sub); model2
model2 <- update( . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2), data=essdata_sub); model2
model2 <- update( . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2)); model2
model2 <- update(model1, . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2)); model2
################ regression models  ##################
# Fit linear model
model1 <- lm(eisced ~ age + I(age^2) + factor(gndr_string), data=essdata_sub); model1
# Update an existing model
model2 <- update(model1, . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2)); model2
# access output
names(model2)
model2$coefficients
model2$residuals
# summary fuction
sum_model2 <- summary(model2); sum_model2
names(sum_model2)
sum_model2$r.squared
sum_model2$sigma
# export result into a nice table
filename <- paste0(dirresults,"myfirstrlm.txt")
stargazer(model1, model2, m3, m4, type="text",
dep.var.labels=c("Education"), covariate.labels=c("Age","Age^2","Gender (Male=1)",
"Gender*Age","Gender*Age^2"), out=filename)
library("stargazer")
# Fit linear model
model1 <- lm(eisced ~ age + I(age^2) + factor(gndr_string), data=essdata_sub); model1
# Update an existing model
model2 <- update(model1, . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2)); model2
# access output
names(model2)
model2$coefficients
model2$residuals
# summary fuction
sum_model2 <- summary(model2); sum_model2
names(sum_model2)
sum_model2$r.squared
sum_model2$sigma
# export result into a nice table
filename <- paste0(dirresults,"myfirstrlm.txt")
stargazer(model1, model2, m3, m4, type="text",
dep.var.labels=c("Education"), covariate.labels=c("Age","Age^2","Gender (Male=1)",
"Gender*Age","Gender*Age^2"), out=filename)
#################### ggplots  ####################
# ggplots are built layer by layer
p <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age))
p + geom_point()
p + geom_point(colour="blue", alpha = 0.1)
# Create a jitter object for reproducible jitter:
jitter <- position_jitter(width = 1, height = 1)
p <- p + geom_point(colour="blue", alpha = 0.1, position = jitter)
# more options
myplot <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) + # Extend regression lines
scale_color_aaas() +
scale_fill_aaas()
filename <- paste0(dirresults,"myfirstrplot.png")
save_plot(filename, myplot, base_width=15, base_height=14, units="cm")
################ regression models  ##################
# Fit linear model
model1 <- lm(eisced ~ age + I(age^2) + factor(gndr_string), data=essdata_sub); model1
# Update an existing model
model2 <- update(model1, . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2)); model2
# access output
names(model2)
model2$coefficients
model2$residuals
# summary fuction
sum_model2 <- summary(model2); sum_model2
names(sum_model2)
sum_model2$r.squared
sum_model2$sigma
# export result into a nice table
filename <- paste0(dirresults,"myfirstrlm.txt")
stargazer(model1, model2, type="text",
dep.var.labels=c("Education"), covariate.labels=c("Age","Age^2","Gender (Male=1)",
"Gender*Age","Gender*Age^2"), out=filename)
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"), covariate.labels=c("Age","Age^2","Gender (Male=1)",
"Gender*Age","Gender*Age^2"), out=filename)
stargazer(model1, model2, type="text",
covariate.labels=c("Age","Age^2","Gender (Male=1)",
"Gender*Age","Gender*Age^2"), out=filename)
stargazer(model1, model2, type="text",
covariate.labels=c("Intercept","Age","Age^2","Gender (Male=1)",
"Gender*Age","Gender*Age^2"), out=filename)
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"),
out=filename)
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"),
covariate.labels=c("Age","Age^2","Gender (Male=1)",
"Gender*Age","Gender*Age^2","Intercep"),
out=filename)
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"),
covariate.labels=c("Age","Age2","Gender (Male=1)",
"Gender*Age","Gender*Age2","Intercep"),
out=filename)
essdata_sub %>% data_grid(age= c(20,30,40,50), .model = model2)
library("modelr")
essdata_sub %>% data_grid(age= c(20,30,40,50), .model = model2)
View(essdata)
View(essdata_sub)
mygrid essdata_sub %>% data_grid(age= c(20,30,40,50), gndr_string = c("Female","Male") , .model = model2)
mygrid <- essdata_sub %>% data_grid(age= c(20,30,40,50), gndr_string = c("Female","Male") , .model = model2); mygrid
predictions <- predict(mode2,new_x=mygrid )
predictions <- predict(model2,new_x=mygrid )
predictions
?predict
predictions <- predict(model2,newdata=mygrid )
predictions
cbind(mygrid,predictions)
pred_df <- cbind(mygrid,predictions) %>% as_tibble()
pred_df <- cbind(mygrid,predictions) %>% as_tibble(); pred_df
pred_df %>% f
ggplot(aes(x=age, y=prediction, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1) +
geom_lines() +
scale_color_aaas() +
scale_fill_aaas()
pred_df %>%
ggplot(aes(x=age, y=prediction, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1) +
geom_lines() +
scale_color_aaas() +
scale_fill_aaas()
pred_df %>%
ggplot(aes(x=age, y=prediction, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1) +
geom_line() +
scale_color_aaas() +
scale_fill_aaas()
pred_df %>%
ggplot(aes(x=age, y=predictions, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1) +
geom_line() +
scale_color_aaas() +
scale_fill_aaas()
pred_df %>%
ggplot(aes(x=age, y=predictions, group= gndr_string, colour=gndr_string)) +
geom_line(size=1) +
scale_color_aaas() +
scale_fill_aaas()
pred_df %>%
ggplot(aes(x=age, y=predictions, group= gndr_string, colour=gndr_string)) +
geom_line(size=1) +
labs(x="age", y="predicted education", title="Eduucational attainment by age and gender") +
scale_color_aaas() +
scale_fill_aaas()
#################### ggplots  ####################
# ggplots are built layer by layer
p <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age))
p + geom_point()
p + geom_point(colour="blue", alpha = 0.1)
# Create a jitter object for reproducible jitter:
jitter <- position_jitter(width = 1, height = 1)
p <- p + geom_point(colour="blue", alpha = 0.1, position = jitter)
# more options
myplot <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=eisced, y=age, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) + # Extend regression lines
scale_color_aaas() +
scale_fill_aaas()
filename <- paste0(dirresults,"myfirstrplot.png")
save_plot(filename, myplot, base_width=15, base_height=14, units="cm")
################ regression models  ##################
# Fit linear model
model1 <- lm(eisced ~ age + I(age^2) + factor(gndr_string), data=essdata_sub); model1
# Update an existing model
model2 <- update(model1, . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2)); model2
# access output
names(model2)
model2$coefficients
model2$residuals
# summary fuction
sum_model2 <- summary(model2); sum_model2
names(sum_model2)
sum_model2$r.squared
sum_model2$sigma
# export result into a nice table
filename <- paste0(dirresults,"myfirstrlm.txt")
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"),
covariate.labels=c("Age","Age2","Gender (Male=1)", "Gender*Age","Gender*Age2","Intercep"),
out=filename)
########### Create prediction and plot from model  #############
# create a data grid
mygrid <- essdata_sub %>% data_grid(age= c(20,30,40,50), gndr_string = c("Female","Male") , .model = model2); mygrid
predictions <- predict(model2,newdata=mygrid )
pred_df <- cbind(mygrid,predictions) %>% as_tibble(); pred_df
pred_plot <-pred_df %>%
ggplot(aes(x=age, y=predictions, group= gndr_string, colour=gndr_string)) +
geom_line(size=1) +
labs(x="age", y="predicted education", title="Eduucational attainment by age and gender") +
scale_color_aaas() +
scale_fill_aaas()
filename <- paste0(dirresults,"plotpred.png")
save_plot(filename, myplot, base_width=15, base_height=14, units="cm")
filename <- paste0(dirresults,"plotpred.png")
save_plot(filename, pred_plot, base_width=15, base_height=14, units="cm")
#################### ggplots  ####################
# ggplots are built layer by layer
p <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=age, y=eisced))
p + geom_point()
p + geom_point(colour="blue", alpha = 0.1)
# Create a jitter object for reproducible jitter:
jitter <- position_jitter(width = 1, height = 1)
p <- p + geom_point(colour="blue", alpha = 0.1, position = jitter)
# more options
myplot <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=age, y=eisced, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) + # Extend regression lines
scale_color_aaas() +
scale_fill_aaas()
filename <- paste0(dirresults,"myfirstrplot.png")
save_plot(filename, myplot, base_width=15, base_height=14, units="cm")
################ regression models  ##################
# Fit linear model
model1 <- lm(eisced ~ age + I(age^2) + factor(gndr_string), data=essdata_sub); model1
# Update an existing model
model2 <- update(model1, . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2)); model2
# access output
names(model2)
model2$coefficients
model2$residuals
# summary fuction
sum_model2 <- summary(model2); sum_model2
names(sum_model2)
sum_model2$r.squared
sum_model2$sigma
# export result into a nice table
filename <- paste0(dirresults,"myfirstrlm.txt")
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"),
covariate.labels=c("Age","Age2","Gender (Male=1)", "Gender*Age","Gender*Age2","Intercep"),
out=filename)
########### Create prediction and plot from model  #############
# create a data grid
mygrid <- essdata_sub %>% data_grid(age= c(20,30,40,50), gndr_string = c("Female","Male") , .model = model2); mygrid
predictions <- predict(model2,newdata=mygrid )
pred_df <- cbind(mygrid,predictions) %>% as_tibble(); pred_df
pred_plot <-pred_df %>%
ggplot(aes(x=age, y=predictions, group= gndr_string, colour=gndr_string)) +
geom_line(size=1) +
labs(x="age", y="predicted education", title="Eduucational attainment by age and gender") +
scale_color_aaas() +
scale_fill_aaas()
filename <- paste0(dirresults,"plotpred.png")
save_plot(filename, pred_plot, base_width=15, base_height=14, units="cm")
