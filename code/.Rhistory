levels.destination <- levels(mydata$destination)
levels.country     <- levels(mydata$country)
print(mydata %>% as_tibble())
# Set reference categories
mydata$origin      <- relevel(mydata$origin, ref = "V/VI")
mydata$destination <- relevel(mydata$destination, ref = "V/VI")
mydata$country     <- relevel(mydata$country, ref = "EW")
mydata$Freq        <- mydata$Freq + 1 # add small constant to avoid problems with empty cells.
# Fit models
indep <- gnm(Freq ~ (origin + destination)*country, family = poisson, data = mydata)
qpm  <- gnm(Freq ~ (origin + destination)*country + Diag(origin, destination)*country, family = poisson, data = mydata)
rchomog <- gnm(Freq ~ (origin + destination)*country + MultHomog(origin, destination) + Diag(origin, destination)*country, family = poisson, data = mydata)
rc1 <- gnm(Freq ~ (origin + destination)*country + Mult(origin, destination) + Diag(origin, destination)*country, family = poisson, data = mydata)
unidiff <- gnm(Freq ~ (origin + destination)*country + Mult(Exp(country), origin:destination), family = poisson, data = mydata)
# Compare models via godness of fit statistics
models <- glmlist(indep,qpm,rchomog,rc1,unidiff)
LRstats(models)
# Create a synthetic dataset with all possible combinations of values
dummy.model <- lm(Freq ~ origin + destination + country, data=mydata)
new_x <- mydata %>% data_grid(origin,destination,country,.model=dummy.model)
# Predicted counts
predictions <- cbind(mydata%>% data_grid(origin,destination,country,.model=dummy.model), pred = predict(unidiff, newdata=new_x)) %>%
as_tibble()
# Intercept
intercept <- predictions %>% filter(origin=="V/VI", destination=="V/VI", country=="EW") %>% dplyr::summarise(pred) %>% as.numeric()
# Log odd ratios for marginal distributions
predictions <- predictions %>% mutate(pred = pred - intercept) # remove intercept
predictions_country     <- predictions %>% filter(origin=="V/VI", destination=="V/VI")  %>% rename(margin_country=pred) %>% select(country,margin_country)
predictions_origin      <- predictions %>% filter(country=="EW", destination=="V/VI") %>% rename(margin_origin=pred) %>% select(origin,margin_origin)
predictions_destination <- predictions %>% filter(country=="EW", origin=="V/VI") %>% rename(margin_destination=pred) %>% select(destination,margin_destination)
# match
predictions <- predictions %>% left_join(predictions_country, by="country")
predictions <- predictions %>% left_join(predictions_origin, by="origin")
predictions <- predictions %>% left_join(predictions_destination, by="destination")
# Log odd ratios for marginal distributions origin and destination by country
predictions_country_origin <- predictions %>% filter(origin!="V/VI",country!="EW",destination=="V/VI") %>%
rename(margin_country_origin=pred) %>% mutate(margin_country_origin = margin_country_origin - (margin_country + margin_origin )) %>%
select(country,origin,margin_country_origin)
predictions_country_destination <- predictions %>% filter(origin=="V/VI",country!="EW",destination!="V/VI") %>%
rename(margin_country_destination=pred) %>% mutate(margin_country_destination = margin_country_destination - (margin_country + margin_destination )) %>%
select(country,destination,margin_country_destination)
predictions <- predictions %>% left_join(predictions_country_origin, by=c("country","origin")) %>%  replace_na(list(margin_country_origin = 0))
predictions <- predictions %>% left_join(predictions_country_destination, by=c("country","destination")) %>%  replace_na(list(margin_country_destination = 0))
# Margin-free log-odd ratios (LORs)
predictions <- predictions %>%
mutate(LOR = pred - (margin_country + margin_origin + margin_destination + margin_country_origin + margin_country_destination) )
# Plot
plot <- predictions %>%
ggplot(aes(y=factor(origin, levels = rev(levels.origin)),
x=factor(destination, levels = levels.destination))) + facet_wrap( ~ country) + geom_raster(aes(fill= LOR)) +
scale_fill_gradientn(limits=c(-6,6), colours=c("red","white","blue")) +
labs(y="Father's occupation", x= "Children's occupation", colour="") +
theme_bw() + theme(axis.text.x = element_text(size=9, angle=45, vjust=-1, hjust=0),
axis.text.y = element_text(size=9, angle=0),
plot.title= element_text(size=11)) +
scale_x_discrete(position="top")
print(plot)
install.packages("povcalnetR")
install.packages(c("devtools", "httr"))
devtools::install_github("worldbank/povcalnetR")
("povcalnetR")
library("povcalnetR")
library("povcalnetR")
library(povcalnetR)
library(dplyr)
povcalnet(country = "ALB") %>% glimpse()
library("tidyverse")
update.packages("tidyverse")
update.packages("tidyverse")
library("povcalnetR")
povcalnet(country = "ALB") %>% glimpse()
library("tidyverse")
povcalnet(country = "ALB") %>% glimpse()
install.packages("stationaRy", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("stationaRy")
a <- get_station_metadata() %>%
dplyr::filter(country == "CHI")
a
a <- get_station_metadata() %>%
dplyr::filter(country == "CL")
q
a
get_station_metadata() %>% count(country)
get_station_metadata() %>% count(country)
library("tidyverse")
get_station_metadata() %>% count(country)
get_station_metadata() %>% select(starts_with("C")) %>% count(country)
get_station_metadata() %>% filter(starts_with("C")) %>% count(country)
get_station_metadata() %>% filter(country == starts_with("C")) %>% count(country)
get_station_metadata() %>%  %>% count(country)
a <- get_station_metadata() %>%
dplyr::filter(country == "CL")
a
a <- get_station_metadata() %>%
dplyr::filter(country == "CH")
a
a <- get_station_metadata() %>%
dplyr::filter(country == "CHI")
a
get_station_metadata() %>% count(country) %>% as.data.frame()
a <- get_station_metadata() %>%
dplyr::filter(country == "CI")
a
a %>% count(name)
a %>% count(name) %>% as.data.frame()
2 + 2
4 + 4
a_caracther <- "Hello"
knitr::opts_chunk$set(echo = TRUE, fig.width = 12, fig.height = 4)
a_caracther <- "Hello"
a_caracther <- "Hello"
a_caracther
class(a_caracther)
a_number   <- 3; a_number
4 -> another_number; another_number
neg_inf <- log(0); neg_inf
log(0.00000000000000000000000001)
pos_inf <- 1/0; pos_inf
1/0.000000000000000000000000000009
a_truth <- TRUE; a_truth
u <- c(1,2,3,4,5,6); u
v <- c(7,8,9,10,11); v
uv <- c(u,v); uv
some_letters  <- c("a","b")
some_letters
more_letters  <- c("c","d")
abcd  <- c(some_letters,more_letters); abcd
w <- rep(1,6); w
x <- seq(from=1,to=3.5,by=0.5); x
y <- seq(length=6, from=10, 100); y
z <- 6:11; z
x
xx <- rep(x,2); xx
some_numbers <- seq(1:100)
some_numbers
a_matrix <- matrix(some_numbers,  nrow = 2, ncol = 2); a_matrix
matrix(some_numbers,  nrow = 5); another_matrix
x
y
matrix_1 <- cbind(y,x); matrix_1
matrix_2 <- rbind(y,x); matrix_2
identity <- diag(10); identity
data.frame(id = letters[1:10], x = 1:10, y = 11:20); mydata
data.frame(id = letters[1:10], x = 1:10, y = 11:20)
mydata <- data.frame(id = letters[1:10], x = 1:10, y = 11:20); mydata
View(mydata)
letters
letters
letters
letter
x
mydata$x
names(mydata)
z <- mydata$x + mydata$y; mydata
z
mydata$z <- mydata$x + mydata$y; mydata
View(mydata)
my_list <- list(myvector=letters[1:10], mymatrix=matrix(1:100,nrow=5), mydf=mydata); my_list
my_list$mymatrix
my_list$myvector
matrix_2
df_2 <- as.data.frame(matrix_2)
df_2
matrix_1
df_2 <- as.data.frame(matrix_1)
df_2
c("var1","var2")
names(df_2) <- c("var1","var2")
df_2
"3"
as.numeric("3")
as.numeric("3") + 1
"3" + 1
as.character(3)
paste("Hello","Word",sep=" ")
paste("Hello","Word",sep="+")
paste("Hello","Word",sep="/d")
paste(c("a","b","c","d"), collapse="+")
x <- round(runif(20,0,100),0)
y <- round(runif(20,0,100),0); y
x
length(y)
sum(y)
min(y)
which.min(y)
- max(y)
max(y)
which.max(y)
rank(y)
sort(y)
x <- round(runif(20,0,100),0)
y <- round(runif(20,0,100),0)
x*y
t(x)%*%y
y
y>20
(y>20)*1
round(y,0)==round(x,0)
y!=x
y[1]
y(1)
y[c(1,3)]
y[3:length(y)]
y[-c(1,3)]
M_2[2,5]
M_2[,5]
M_2[1,]
matrix_2[2,5]
matrix_2[,5]
matrix_2[1,]
which(y<2 | y>=5)
y[which(y<2 | y>=5)]
y[y<2 | y>=5]
c(3,1,NA,4,6,NA)
is.na(y)
# Data with missing values
y <- c(3,1,NA,4,6,NA)
# Return logical vectors
is.na(y)
y[!is.na(y)]
cat("\014")
rm(list = ls())
install.packages("tidyverse", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
installed.packages("tidyverse")
################################################## Preamble #################################################
# Clear Screen
cat("\014")
rm(list = ls())
# Load Packages
library("tidyverse")
library("modelr")
library("readstata13")
library("ggsci")
library("cowplot")
library("stargazer")
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/EUI/Introduction to Quantitative Methods/IntroR/"
folder
paste0(folder,"code/")
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/EUI/Introduction to Quantitative Methods/IntroR/"
dircode       <- paste0(folder,"code/")
dirdata       <- paste0(folder,"data/")
dirresults    <- paste0(folder,"results/");  dirresults
dircode
dirdata
dirresults
dirdata
setwd(dirdata)
getwd()
essdata <- read.dta13("ESS8_subset.dta", convert.factors=FALSE); essdata
essdata
View(essdata)
View(essdata)
essdata
head(essdata)
essdata %>% head()
essdata %>% head() %>% head()
essdata %>% head() %>% select(idno)
essdata
essdata %>% as_tibble()
essdata <- essdata %>% as_tibble(); essdata
essdata <- essdata %>% as_tibble(); essdata
essdata
essdata %>% select(cntry,gndr,yrbrn,eisced)
essdata %>% select(cntry,gndr,yrbrn,eisced)
essdata %>% select(cntry,gndr,yrbrn,eisced) %>% select(hinctnta)
essdata %>% filter(cntry!="AT" & yrbrn>1990)
essdata %>% mutate(age = 2019 - yrbrn)
essdata_sub <- essdata %>% select(cntry,gndr,age,eisced)
%>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn) %>%
mutate(gndr_string = case_when(gndr == 1 ~ "Male", gndr == 2 ~ "Female"))
essdata %>% select(cntry,gndr,age,eisced) %>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn)
essdata %>% select(cntry,gndr,age,eisced) %>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn)
essdata %>% select(cntry,gndr,age,eisced) %>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn)
essdata_sub <- essdata %>% select(cntry,gndr,eisced) %>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn)
essdata %>% select(cntry,gndr,yrbrn,eisced) %>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn)
essdata %>% select(cntry,gndr,yrbrn,eisced) %>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn) %>%
mutate(gndr_string = case_when(gndr == 1 ~ "Male", gndr == 2 ~ "Female"))
essdata_sub <- essdata %>% select(cntry,gndr,yrbrn,eisced) %>%
filter(cntry!="AT" & yrbrn>1990, eisced!=55) %>%
mutate(age = 2019 - yrbrn) %>%
mutate(gndr_string = case_when(gndr == 1 ~ "Male", gndr == 2 ~ "Female"))
essdata_sub %>% summarise(mean = mean(age), sd = sd(age))
essdata_sub %>% count(gndr_string)
essdata_sub %>% group_by(cntry,gndr_string) %>%
summarise(mean_educ = mean(eisced, na.rm=TRUE), mean_age = mean(age, na.rm=TRUE))
essdata_sub %>% group_by(cntry,gndr_string) %>%
summarise(mean_educ = mean(eisced, na.rm=TRUE), mean_age = mean(age, na.rm=TRUE)) %>%
arrange(cntry)
essdata_sub %>% group_by(cntry,gndr_string) %>%
summarise(mean_educ = mean(eisced, na.rm=TRUE), mean_age = mean(age, na.rm=TRUE)) %>%
arrange(gndr_string)
summary_bygroup <- essdata_sub %>% group_by(cntry,gndr_string) %>%
summarise(mean_educ = mean(eisced, na.rm=TRUE), mean_age = mean(age, na.rm=TRUE)) %>%
arrange(gndr_string)
summary_bygroup
summary_bygroup
summary_bygroup %>% gather(key = var, value=mean, c(mean_educ,mean_age))
################################################## Preamble #################################################
# Clear Screen
cat("\014")
rm(list = ls())
################################################## Preamble #################################################
# Clear Screen
cat("\014")
rm(list = ls())
# Load Packages
library("tidyverse")
library("modelr")
library("readstata13")
library("ggsci")
library("cowplot")
library("stargazer")
############################################# Setting directories ############################################
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/EUI/Introduction to Quantitative Methods/IntroR/"
dircode       <- paste0(folder,"code/")
dirdata       <- paste0(folder,"data/")
dirresults    <- paste0(folder,"results/");  dirresults
############################################### Input data ###################################################
# Set working directory
setwd(dirdata)
getwd()
essdata <- read.dta13("ESS8_subset.dta", convert.factors=FALSE); essdata
############################################ Data exploration ################################################
# Call another R script containg some analyses.
#Organizing the work in this ways allows for more readable and tractable code.
# Set working directory
setwd(dircode)
source("2_exploration.R")
essdata_sub %>% filter(!is.na(gndr_string))
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot()
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=age, y=eisced))
p <- essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=age, y=eisced))
p
p
p + geom_point()
p + geom_point(colour="blue", alpha = 0.1)
jitter <- position_jitter(width = 1, height = 1)
p + geom_point(colour="blue", alpha = 0.1, position = jitter)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=age, y=eisced, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE)
essdata_sub %>% filter(!is.na(gndr_string)) %>%
ggplot(aes(x=age, y=eisced, group= gndr_string, colour=gndr_string)) +
geom_point(alpha = 0.1, position = jitter) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) + # Extend regression lines
scale_color_aaas() +
scale_fill_aaas()
model1 <- lm(eisced ~ age + I(age^2) + factor(gndr_string), data=essdata_sub); model1
model2 <- update(model1, . ~ . + factor(gndr_string)*age + factor(gndr_string)*I(age^2)); model2
names(model2)
model2$coefficients
model2$residuals
summary(model2)
sum_model2 <- summary(model2); sum_model2
names(sum_model2)
sum_model2$r.squared
sum_model2$sigma
model_@
)
model_2
model2
sum_model2
dirresults
paste0(dirresults,"myfirstrlm.txt")
filename <- paste0(dirresults,"myfirstrlm.txt")
filename
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"),
covariate.labels=c("Age","Age2","Gender (Male=1)", "Gender*Age","Gender*Age2","Intercep"),
out=filename)
essdata_sub %>% data_grid(age= c(20,30,40,50) , .model = model2); mygrid
mygrid <- essdata_sub %>% data_grid(age= c(20,30,40,50) , .model = model2); mygrid
mygrid <- essdata_sub %>% data_grid(age= c(20,30,40,50), gndr_string = c("Female","Male") , .model = model2); mygrid
mygrid
predictions <- predict(model2,newdata=mygrid )
predictions
pred_df <- cbind(mygrid,predictions) %>% as_tibble(); pred_df
pred_df %>%
ggplot(aes(x=age, y=predictions, group= gndr_string, colour=gndr_string))
pred_df %>%
ggplot(aes(x=age, y=predictions, group= gndr_string, colour=gndr_string)) +
geom_line(size=1) +
labs(x="age", y="predicted education", title="Educational attainment by age and gender") +
scale_color_aaas() +
scale_fill_aaas()
filename <- paste0(dirresults,"plotpred.png")
filename
filename <- paste0(dirresults,"plotpred.png")
save_plot(filename, pred_plot, base_width=15, base_height=14, units="cm")
pred_plot <-pred_df %>%
ggplot(aes(x=age, y=predictions, group= gndr_string, colour=gndr_string)) +
geom_line(size=1) +
labs(x="age", y="predicted education", title="Educational attainment by age and gender") +
scale_color_aaas() +
scale_fill_aaas()
filename <- paste0(dirresults,"plotpred.png")
save_plot(filename, pred_plot, base_width=15, base_height=14, units="cm")
################################################## Preamble #################################################
# Clear Screen
cat("\014")
rm(list = ls())
# Load Packages
library("tidyverse")
library("modelr")
library("readstata13")
library("ggsci")
library("cowplot")
library("stargazer")
############################################# Setting directories ############################################
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/EUI/Introduction to Quantitative Methods/IntroR/"
dircode       <- paste0(folder,"code/")
dirdata       <- paste0(folder,"data/")
dirresults    <- paste0(folder,"results/");  dirresults
############################################### Input data ###################################################
# Set working directory
setwd(dirdata)
getwd()
essdata <- read.dta13("ESS8_subset.dta", convert.factors=FALSE); essdata
############################################ Data exploration ################################################
# Call another R script containg some analyses.
#Organizing the work in this ways allows for more readable and tractable code.
# Set working directory
setwd(dircode)
source("2_exploration.R")
############################################ Data analysis ################################################
# Set working directory
setwd(dircode)
source("2_analyses.R")
################################################## Preamble #################################################
# Clear Screen
cat("\014")
rm(list = ls())
# Load Packages
library("tidyverse")
library("modelr")
library("readstata13")
library("ggsci")
library("cowplot")
library("stargazer")
############################################# Setting directories ############################################
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/EUI/Introduction to Quantitative Methods/IntroR/"
dircode       <- paste0(folder,"code/")
dirdata       <- paste0(folder,"data/")
dirresults    <- paste0(folder,"results/");  dirresults
############################################### Input data ###################################################
# Set working directory
setwd(dirdata)
getwd()
essdata <- read.dta13("ESS8_subset.dta", convert.factors=FALSE); essdata
############################################ Data exploration ################################################
# Call another R script containg some analyses.
#Organizing the work in this ways allows for more readable and tractable code.
# Set working directory
setwd(dircode)
source("2_exploration.R")
############################################ Data analysis ################################################
# Set working directory
setwd(dircode)
source("3_analyses.R")
################################################## Preamble #################################################
# Clear Screen
cat("\014")
rm(list = ls())
# Load Packages
library("tidyverse")
library("modelr")
library("readstata13")
library("ggsci")
library("cowplot")
library("stargazer")
############################################# Setting directories ############################################
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/EUI/Introduction to Quantitative Methods/IntroR/"
dircode       <- paste0(folder,"code/")
dirdata       <- paste0(folder,"data/")
dirresults    <- paste0(folder,"results/");  dirresults
############################################### Input data ###################################################
# Set working directory
setwd(dirdata)
getwd()
essdata <- read.dta13("ESS8_subset.dta", convert.factors=FALSE); essdata
############################################ Data exploration ################################################
# Call another R script containg some analyses.
#Organizing the work in this ways allows for more readable and tractable code.
# Set working directory
setwd(dircode)
source("2_exploration.R")
############################################ Data analysis ################################################
# Set working directory
setwd(dircode)
source("3_analyses.R")
